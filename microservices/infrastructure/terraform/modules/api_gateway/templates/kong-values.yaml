# Kong values template for Helm chart

namespace: kong

image:
  repository: kong/kong-gateway
  tag: "3.3"
  pullPolicy: IfNotPresent

env:
  database: "${database_type}"
  log_level: info
  proxy_access_log: /dev/stdout
  admin_access_log: /dev/stdout
  proxy_error_log: /dev/stderr
  admin_error_log: /dev/stderr

ingressController:
  enabled: true
  ingressClass: "${ingress_class_name}"
  installCRDs: false

proxy:
  enabled: ${enable_proxy_service}
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  http:
    enabled: true
    port: 80
  tls:
    enabled: true
    port: 443
  stream:
    - port: 9000
      containerPort: 9000
      protocol: TCP

admin:
  enabled: ${enable_admin_service}
  type: ClusterIP
  http:
    enabled: true
    port: 8001
  tls:
    enabled: true
    port: 8444

manager:
  enabled: ${enable_manager_service}
  type: ClusterIP
  http:
    enabled: true
    port: 8002
  tls:
    enabled: true
    port: 8445

portal:
  enabled: ${enable_portal_service}
  type: ClusterIP
  http:
    enabled: true
    port: 8003
  tls:
    enabled: true
    port: 8446

enterprise:
  enabled: false

postgresql:
  enabled: ${enable_database}
  auth:
    username: kong
    password: kong
    database: kong
  persistence:
    size: "${pvc_storage_size}"
    storageClass: "${pvc_storage_class_name}"

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

deploymentAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8100"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8100"

replicaCount: ${replica_count}

serviceMonitor:
  enabled: true
  labels:
    release: prometheus-operator

plugins:
  configMaps:
    - name: kong-plugins-config
      data:
        rate_limiting: |
          {
            "enabled": ${rate_limiting_enabled},
            "second": 10,
            "minute": 100,
            "hour": 1000,
            "policy": "local",
            "limit_by": "ip",
            "hide_client_headers": false
          }
        mtls: |
          {
            "enabled": ${enable_mtls},
            "cert_depth": 1,
            "skip_consumer_lookup": false
          }

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

readinessProbe:
  httpGet:
    path: /status
    port: status
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

livenessProbe:
  httpGet:
    path: /status
    port: status
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - kong
          topologyKey: kubernetes.io/hostname
