apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
  namespace: social-proof-app
  labels:
    app: users-service
    component: microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: users-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
      labels:
        app: users-service
    spec:
      containers:
        - name: users-service
          image: ${ECR_REPOSITORY_URL}/social-proof-app/users-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3001"
            - name: LOG_LEVEL
              value: "info"
            - name: TELEMETRY_ENABLED
              value: "true"
            - name: CLERK_API_KEY
              valueFrom:
                secretKeyRef:
                  name: users-service-secrets
                  key: clerk-api-key
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: users-service-secrets
                  key: jwt-secret
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: users-service-secrets
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: users-service-secrets
                  key: postgres-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: users-service-config
                  key: postgres-host
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: users-service-config
                  key: postgres-port
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: users-service-config
                  key: postgres-db
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: users-service-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      serviceAccountName: users-service-sa
