receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  prometheus:
    config:
      scrape_configs:
        - job_name: "otel-collector"
          scrape_interval: 10s
          static_configs:
            - targets: ["0.0.0.0:8888"]
  zipkin:
    endpoint: 0.0.0.0:9411

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
  memory_limiter:
    check_interval: 1s
    limit_percentage: 80
    spike_limit_percentage: 25
  resource:
    attributes:
      - key: deployment.environment
        value: ${DEPLOYMENT_ENVIRONMENT}
        action: upsert
  # Rename service name with prefix to avoid conflicts
  transform:
    metric_statements:
      - context: metric
        statements:
          - set(resource.attributes["service.namespace"], "social-proof") where resource.attributes["service.namespace"] == nil
  # Filter out unwanted logs
  filter:
    logs:
      exclude:
        match_type: regexp
        regexp:
          - "^health"
          - "^ping"

exporters:
  prometheus:
    endpoint: 0.0.0.0:8889
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true
  loki:
    endpoint: http://loki:3100/loki/api/v1/push
    tenant_id: "social-proof"
    labels:
      resource:
        service.name: "service_name"
        service.namespace: "service_namespace"
        service.version: "service_version"
        host.name: "host_name"
        deployment.environment: "deployment_environment"
  otlphttp/prometheus:
    endpoint: http://prometheus:9090/api/v1/otlp
    tls:
      insecure: true
  logging:
    loglevel: info

service:
  pipelines:
    traces:
      receivers: [otlp, zipkin]
      processors: [memory_limiter, batch, resource]
      exporters: [jaeger, logging]
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, transform, resource]
      exporters: [prometheus, otlphttp/prometheus, logging]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, filter, resource]
      exporters: [loki, logging]

  telemetry:
    logs:
      level: info
    metrics:
      address: 0.0.0.0:8888
