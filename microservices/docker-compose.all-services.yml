version: '3.8'

services:
  # Integrations Service
  integrations:
    build:
      context: ./services/integrations
      dockerfile: Dockerfile.basic
    container_name: social-proof-integrations
    restart: unless-stopped
    ports:
      - "3001:3001"
    networks:
      - social-proof-network

  # Notification Stream Service
  notification-stream:
    build:
      context: ./services/notification-stream-service
      dockerfile: Dockerfile.basic
    container_name: social-proof-notification-stream
    restart: unless-stopped
    ports:
      - "3002:3002"
    networks:
      - social-proof-network

  # Notifications Service
  notifications:
    build:
      context: ./services/notifications
      dockerfile: Dockerfile.basic
    container_name: social-proof-notifications
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - social-proof-network

  # Users Service
  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile.basic
    container_name: social-proof-users
    restart: unless-stopped
    ports:
      - "3003:3001"
    networks:
      - social-proof-network

  # Analytics Service
  analytics:
    build:
      context: ./services/analytics
      dockerfile: Dockerfile.basic
    container_name: social-proof-analytics
    restart: unless-stopped
    ports:
      - "3004:3003"
    networks:
      - social-proof-network

  # Billing Service
  billing:
    build:
      context: ./services/billing
      dockerfile: Dockerfile.basic
    container_name: social-proof-billing
    restart: unless-stopped
    ports:
      - "3005:3004"
    networks:
      - social-proof-network

  # Infrastructure Services
  redis:
    image: redis:7-alpine
    container_name: social-proof-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - social-proof-network
    command: redis-server --appendonly yes

  kafka:
    image: bitnami/kafka:latest
    container_name: social-proof-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - social-proof-network

  postgres:
    image: postgres:15-alpine
    container_name: social-proof-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=social_proof_users,social_proof_billing
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - social-proof-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: social-proof-clickhouse
    restart: unless-stopped
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    networks:
      - social-proof-network

# Volumes for data persistence
volumes:
  redis-data:
  kafka-data:
  postgres-data:
  clickhouse-data:

# Networks for service communication
networks:
  social-proof-network:
    driver: bridge 