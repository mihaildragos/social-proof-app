apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: social-proof-system
  labels:
    app: social-proof-app
    environment: ${ENVIRONMENT}
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-to-services
  namespace: social-proof-system
  labels:
    app: social-proof-app
    environment: ${ENVIRONMENT}
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
    - Ingress
  ingress:
    # Allow traffic from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 3002
        - protocol: TCP
          port: 3003
        - protocol: TCP
          port: 3004
        - protocol: TCP
          port: 3005
        - protocol: TCP
          port: 3006

    # Allow inter-service communication
    - from:
        - podSelector:
            matchLabels:
              tier: backend
      ports:
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 3002
        - protocol: TCP
          port: 3003
        - protocol: TCP
          port: 3004
        - protocol: TCP
          port: 3005
        - protocol: TCP
          port: 3006

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-database-access
  namespace: social-proof-system
  labels:
    app: social-proof-app
    environment: ${ENVIRONMENT}
spec:
  podSelector:
    matchLabels:
      tier: database
  policyTypes:
    - Ingress
  ingress:
    # Allow access from backend services to database
    - from:
        - podSelector:
            matchLabels:
              tier: backend
      ports:
        - protocol: TCP
          port: 5432

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-cache-access
  namespace: social-proof-system
  labels:
    app: social-proof-app
    environment: ${ENVIRONMENT}
spec:
  podSelector:
    matchLabels:
      tier: cache
  policyTypes:
    - Ingress
  ingress:
    # Allow access from backend services to cache
    - from:
        - podSelector:
            matchLabels:
              tier: backend
      ports:
        - protocol: TCP
          port: 6379

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-messaging-access
  namespace: social-proof-system
  labels:
    app: social-proof-app
    environment: ${ENVIRONMENT}
spec:
  podSelector:
    matchLabels:
      tier: messaging
  policyTypes:
    - Ingress
  ingress:
    # Allow access from backend services to messaging
    - from:
        - podSelector:
            matchLabels:
              tier: backend
      ports:
        - protocol: TCP
          port: 9092 # Kafka
        - protocol: TCP
          port: 2181 # ZooKeeper

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-analytics-access
  namespace: social-proof-system
  labels:
    app: social-proof-app
    environment: ${ENVIRONMENT}
spec:
  podSelector:
    matchLabels:
      tier: analytics
  policyTypes:
    - Ingress
  ingress:
    # Allow access from backend services to analytics
    - from:
        - podSelector:
            matchLabels:
              tier: backend
      ports:
        - protocol: TCP
          port: 8123 # ClickHouse HTTP
        - protocol: TCP
          port: 9000 # ClickHouse Native

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-internet
  namespace: social-proof-system
  labels:
    app: social-proof-app
    environment: ${ENVIRONMENT}
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
    - Egress
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

    # Allow HTTPS for external APIs
    - to: []
      ports:
        - protocol: TCP
          port: 443

    # Allow HTTP for health checks and webhooks
    - to: []
      ports:
        - protocol: TCP
          port: 80

    # Allow access to internal services
    - to:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 5432 # PostgreSQL
        - protocol: TCP
          port: 6379 # Redis
        - protocol: TCP
          port: 9092 # Kafka
        - protocol: TCP
          port: 2181 # ZooKeeper
        - protocol: TCP
          port: 8123 # ClickHouse HTTP
        - protocol: TCP
          port: 9000 # ClickHouse Native
